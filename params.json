{
  "name": "jsonexport",
  "tagline": "Makes easy to convert JSON to CSV",
  "body": "# jsonexport\r\n\r\n\r\nThis module makes easy to convert JSON to CSV and its very customizable.\r\n\r\n[Project Page](http://kauegimenes.github.io/jsonexport/)\r\n\r\nChangelog\r\n----------------------\r\n- v1.4.2 - default date handler return date.toLocaleString (jclay)\r\n- v1.3.2 - fix userOptions optional\r\n- v1.3.1 - object & array test\r\n- v1.3.0 - some bug fixes + mocha tests/ + removed options handleArray and handleObject\r\n- v1.2.2 - special chars escaping improvement (papswell)\r\n- v1.2.0 - orderHeaders defaults to false\r\n- v1.1.2 - Escaping text content if needed (papswell)\r\n- v1.1.0 - Expose library as CLI (cburgmer)\r\n- v1.0.7 - Fix for prototyped properties\r\n- v1.0.6 - Create new lines in the CSV file to handle JSON objects with arrays\r\n\r\n# Usage\r\n\r\nInstallation command is `npm install jsonexport`.\r\nRun tests with `npm test`.\r\n\r\n```javascript\r\nvar jsonexport = require('jsonexport');\r\n\r\njsonexport({lang: 'Node.js',module: 'jsonexport'}, {rowDelimiter: '|'}, function(err, csv){\r\n    if(err) return console.log(err);\r\n    console.log(csv);\r\n});\r\n```\r\n\r\n## JSON Array Example\r\n\r\n### Simple Array\r\n\r\n#### Code\r\n\r\n```javascript\r\nvar jsonexport = require('jsonexport');\r\n\r\nvar contacts = [{\r\n    name: 'Bob',\r\n    lastname: 'Smith'\r\n},{\r\n    name: 'James',\r\n    lastname: 'David'\r\n},{\r\n    name: 'Robert',\r\n    lastname: 'Miller'\r\n},{\r\n    name: 'David',\r\n    lastname: 'Martin'\r\n}];\r\n\r\njsonexport(contacts,function(err, csv){\r\n    if(err) return console.log(err);\r\n    console.log(csv);\r\n});\r\n```\r\n\r\n#### Result\r\n\r\n```\r\nname,lastname\r\nBob,Smith\r\nJames,David\r\nRobert,Miller\r\nDavid,Martin\r\n```\r\n\r\n### Complex Array\r\n\r\n#### Code\r\n\r\n```javascript\r\nvar jsonexport = require('jsonexport');\r\n\r\nvar contacts = [{\r\n   name: 'Bob',\r\n   lastname: 'Smith',\r\n   family: {\r\n       name: 'Peter',\r\n       type: 'Father'\r\n   }\r\n},{\r\n   name: 'James',\r\n   lastname: 'David',\r\n   family:{\r\n       name: 'Julie',\r\n       type: 'Mother'\r\n   }\r\n},{\r\n   name: 'Robert',\r\n   lastname: 'Miller',\r\n   family: null,\r\n   location: [1231,3214,4214]\r\n},{\r\n   name: 'David',\r\n   lastname: 'Martin',\r\n   nickname: 'dmartin'\r\n}];\r\n\r\njsonexport(contacts,function(err, csv){\r\n    if(err) return console.log(err);\r\n    console.log(csv);\r\n});\r\n```\r\n\r\n#### Result\r\n\r\n```\r\nlastname,name,family.type,family.name,nickname,location\r\nSmith,Bob,Father,Peter,,\r\nDavid,James,Mother,Julie,,\r\nMiller,Robert,,,,1231,3214,4214\r\nMartin,David,,,dmartin,\r\n```\r\n\r\n## JSON Object Example\r\n\r\n### Simple Object\r\n\r\n#### Code\r\n\r\n```javascript\r\nvar jsonexport = require('jsonexport');\r\n\r\nvar stats = {\r\n    cars: 12,\r\n    roads: 5,\r\n    traffic: 'slow'\r\n};\r\n\r\njsonexport(stats,function(err, csv){\r\n    if(err) return console.log(err);\r\n    console.log(csv);\r\n});\r\n```\r\n\r\n#### Result\r\n\r\n```\r\ncars,12\r\nroads,5\r\ntraffic,slow\r\n```\r\n\r\n### Complex Object\r\n\r\n#### Code\r\n\r\n```javascript\r\nvar jsonexport = require('jsonexport');\r\n\r\nvar stats = {\r\n    cars: 12,\r\n    roads: 5,\r\n    traffic: 'slow',\r\n    speed: {\r\n        max: 123,\r\n        avg: 20,\r\n        min: 5\r\n    },\r\n    size: [10,20]\r\n};\r\n\r\njsonexport(stats,function(err, csv){\r\n    if(err) return console.log(err);\r\n    console.log(csv);\r\n});\r\n```\r\n\r\n#### Result\r\n\r\n```\r\ncars,12\r\nroads,5\r\ntraffic,slow\r\nspeed.max,123\r\nspeed.avg,20\r\nspeed.min,5\r\nsize,10;20\r\n```\r\n\r\n## Customization\r\n\r\nIn order to get the most of out of this module, you can customize many parameters and functions.\r\n\r\n####Options\r\n\r\n- `headerPathString` - `String` Used to create the propriety path, defaults to `.` example `contact: {name: 'example}` = `contact.name`\r\n- `rowDelimiter` - `String` Change the file row delimiter\r\n    - Defaults to `,` (**cvs format**).\r\n    - Use `\\t` for **xls format**.\r\n    - Use `;` for (**windows excel .csv format**).\r\n- `textDelimiter` - `String` The character used to escape the text content if needed (default to `\"`)\r\n- `endOfLine` - `String` Replace the OS default EOL.\r\n- `mainPathItem` - `String` Every header will have the `mainPathItem` as the base.\r\n- `arrayPathString` - `String` This is used to output primitive arrays in a single column, defaults to `;`\r\n- `booleanTrueString` - `String` Will be used instead of `true`.\r\n- `booleanFalseString` - `String` Will be used instead of `false`.\r\n- `includeHeaders` - `Boolean` Set this option to false to hide the CSV headers.\r\n- `orderHeaders` - `Boolean` The most used columns are shown first. (defaults to `false`).\r\n- `undefinedString` - `String` If you want to display a custom value for undefined strings, use this option. Defaults to ` `.\r\n- `verticalOutput` - `Boolean` Set this option to false to create a horizontal output for JSON Objects, headers in the first row, values in the second.\r\n- `handleString` - `Function` Use this to customize all `Strings` in the CSV file.\r\n- `handleNumber` - `Function` Use this to customize all `Numbers` in the CSV file.\r\n- `handleBoolean` - `Function` Use this to customize all `Booleans` in the CSV file.\r\n- `handleDate` - `Function` Use this to customize all `Dates` in the CSV file. (default to date.toLocaleString)\r\n\r\n### Handle Function Option Example\r\n\r\nLets say you want to prepend a text to every string in your CSV file, how to do it?\r\n\r\n```javascript\r\nvar jsonexport = require('jsonexport');\r\n\r\nvar options = {\r\n    handleString: function(string, name){\r\n        return 'Hey - ' + string;\r\n    }\r\n};\r\n\r\njsonexport({lang: 'Node.js',module: 'jsonexport'}, options, function(err, csv){\r\n    if(err) return console.log(err);\r\n    console.log(csv);\r\n});\r\n```\r\n\r\nThe output would be:\r\n\r\n```\r\nlang,Hey - Node.js\r\nmodule,Hey - jsonexport\r\n```",
  "google": "",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}